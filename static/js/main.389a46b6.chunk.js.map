{"version":3,"sources":["assets/avatar.jpg","utils/Models.ts","components/SocialIcon.tsx","components/Header.tsx","components/Intro.tsx","components/Skills.tsx","components/Project.tsx","utils/ProjectsList.ts","components/Projects.tsx","components/Content.tsx","components/NotFound.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Role","SocialIcon","props","url","Icon","download","name","aria-label","href","contacts","icon","FaGithub","FaLinkedin","FaTwitter","FaEnvelope","FaFileDownload","Header","className","src","Photo","alt","activeClass","to","spy","smooth","duration","type","map","contact","key","Intro","id","TechModel","value","VALUES","push","this","REACT","link","REDUX","HTML","CSS","EXPRESS","NODE","JAVASCRIPT","TYPESCRIPT","PYTHON","JAVA","Skills","element","Project","project","title","links","role","description","tech","thumbnail","PROJECTS","ALLEGIANCE","FULL_STACK","TRIPSPLIT","BACK_END","BETTERSUBSTATS","FRONT_END","Projects","Object","values","ProjectsList","Content","NotFound","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.389a46b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.80be508a.jpg\";","export interface ProjectsModel {\r\n  [key: string]: ProjectModel;\r\n}\r\n\r\nexport interface ProjectModel {\r\n  title: string;\r\n  links: MetaLinkModel[];\r\n  role: Role;\r\n  description: string;\r\n  tech: MetaLinkModel[];\r\n  thumbnail: string;\r\n}\r\n\r\nexport interface MetaLinkModel {\r\n  name: string;\r\n  link: string;\r\n}\r\n\r\nexport enum Role {\r\n  FULL_STACK = 'Full-Stack Web Developer',\r\n  FRONT_END = 'Front-End Web Developer',\r\n  BACK_END = 'Back-End Web Developer',\r\n  WEB_DESIGN = 'Web Designer',\r\n}\r\n\r\nexport class TechModel {\r\n  static readonly VALUES: TechModel[] = [];\r\n\r\n  static readonly REACT = new TechModel('React', {\r\n    name: 'React.js',\r\n    link: 'https://reactjs.org/',\r\n  });\r\n\r\n  static readonly REDUX = new TechModel('Redux', {\r\n    name: 'Redux',\r\n    link: 'https://redux.js.org/',\r\n  });\r\n\r\n  static readonly HTML = new TechModel('HTML', {\r\n    name: 'HTML',\r\n    link: 'https://en.wikipedia.org/wiki/HTML',\r\n  });\r\n\r\n  static readonly CSS = new TechModel('CSS', {\r\n    name: 'CSS',\r\n    link: 'https://en.wikipedia.org/wiki/Cascading_Style_Sheets',\r\n  });\r\n\r\n  static readonly EXPRESS = new TechModel('Express', {\r\n    name: 'Express.js',\r\n    link: 'https://expressjs.com/',\r\n  });\r\n\r\n  static readonly NODE = new TechModel('Node', {\r\n    name: 'Node.js',\r\n    link: 'https://nodejs.org/en/',\r\n  });\r\n\r\n  static readonly JAVASCRIPT = new TechModel('Javascript', {\r\n    name: 'Javascript',\r\n    link: 'https://www.javascript.com/',\r\n  });\r\n\r\n  static readonly TYPESCRIPT = new TechModel('Typescript', {\r\n    name: 'Typescript',\r\n    link: 'https://www.typescriptlang.org/',\r\n  });\r\n\r\n  static readonly PYTHON = new TechModel('Python', {\r\n    name: 'Python',\r\n    link: 'https://www.python.org/',\r\n  });\r\n\r\n  static readonly JAVA = new TechModel('Java', {\r\n    name: 'Java',\r\n    link: 'https://go.java/',\r\n  });\r\n\r\n  private constructor(\r\n    private readonly key: string,\r\n    public readonly value: MetaLinkModel\r\n  ) {\r\n    TechModel.VALUES.push(this);\r\n  }\r\n\r\n  toString(): string {\r\n    return this.key;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { IconType } from 'react-icons/lib/cjs';\r\n\r\ninterface SocialIconProps {\r\n  url: string;\r\n  Icon: IconType;\r\n  download?: boolean;\r\n  name: string;\r\n}\r\n\r\nconst SocialIcon: React.FC<SocialIconProps> = (props: SocialIconProps) => {\r\n  const { url, Icon, download, name } = props;\r\n\r\n  return (\r\n    <a aria-label={name} href={url} download={download}>\r\n      <Icon />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n","import React from 'react';\r\nimport { Link } from 'react-scroll';\r\nimport {\r\n  FaGithub,\r\n  FaLinkedin,\r\n  FaTwitter,\r\n  FaEnvelope,\r\n  FaFileDownload,\r\n} from 'react-icons/fa';\r\nimport SocialIcon from './SocialIcon';\r\nimport Photo from '../assets/avatar.jpg';\r\n\r\nconst contacts = [\r\n  {\r\n    name: 'github',\r\n    url: 'https://github.com/gasingdong/',\r\n    icon: FaGithub,\r\n  },\r\n  {\r\n    name: 'linkedin',\r\n    url: 'https://www.linkedin.com/in/brandon-dong-b8771315a/',\r\n    icon: FaLinkedin,\r\n  },\r\n  {\r\n    name: 'twitter',\r\n    url: 'https://twitter.com/gasingdong',\r\n    icon: FaTwitter,\r\n  },\r\n  {\r\n    name: 'email',\r\n    url: 'mailto:contact@brandondong.com',\r\n    icon: FaEnvelope,\r\n  },\r\n  {\r\n    name: 'resume',\r\n    url: '/files/BrandonDongResume.pdf',\r\n    icon: FaFileDownload,\r\n    download: true,\r\n  },\r\n];\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"avatar\" src={Photo} alt=\"headshot\" />\r\n      <div className=\"name\">BRANDON DONG</div>\r\n      <div className=\"title\">FULL-STACK WEB DEVELOPER</div>\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <Link activeClass=\"active\" to=\"about\" spy smooth duration={500}>\r\n              <button type=\"button\">ABOUT</button>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link activeClass=\"active\" to=\"skills\" spy smooth duration={500}>\r\n              <button type=\"button\">TECH</button>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link activeClass=\"active\" to=\"projects\" spy smooth duration={500}>\r\n              <button type=\"button\">PROJECTS</button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"socialicons\">\r\n        {contacts.map(contact => (\r\n          <SocialIcon\r\n            key={contact.url}\r\n            url={contact.url}\r\n            Icon={contact.icon}\r\n            download={contact.download}\r\n            name={contact.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Intro: React.FC = () => {\r\n  return (\r\n    <div id=\"about\">\r\n      <h1>About Me</h1>\r\n      <p>\r\n        I&apos;m Brandon Dong, a full-stack web developer from Riverside, CA. I\r\n        have skills in a variety of front-end and back-end technologies, and I\r\n        primarily work in React.js and Express.js.\r\n      </p>\r\n      <p>\r\n        After receiving my Bachelor&apos;s in Statistics, I spent over five\r\n        years in the retail industry, developing a wide array of skills in\r\n        problem-solving, interpersonal communication, and user-oriented design.\r\n        I&apos;m excited to bring these skills to my next role and to continue\r\n        to build fun and exciting projects.\r\n      </p>\r\n      <p>\r\n        If I&apos;m not programming for work or education, I&apos;m usually\r\n        programming for fun, such as creating Minecraft mods. I also like to\r\n        game, particularly role-playing games or board games.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport { TechModel } from '../utils/Models';\r\n\r\nconst Skills: React.FC = () => {\r\n  return (\r\n    <div className=\"skills\" id=\"skills\">\r\n      <h1>Tech Stack</h1>\r\n      <div className=\"buttons\">\r\n        {TechModel.VALUES.map(element => (\r\n          <a\r\n            key={element.value.name}\r\n            className=\"button button--secondary\"\r\n            href={element.value.link}\r\n          >\r\n            {element.value.name}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { ProjectModel } from '../utils/Models';\r\n\r\ninterface ProjectProps {\r\n  project: ProjectModel;\r\n}\r\n\r\nconst Project: React.FC<ProjectProps> = (props: ProjectProps) => {\r\n  const { project } = props;\r\n  return (\r\n    <div className=\"project\">\r\n      <div className=\"project__header\">\r\n        <h2 className=\"project__title\">{project.title}</h2>\r\n        <div className=\"buttons\">\r\n          {project.links.map(element => (\r\n            <a key={element.name} className=\"button\" href={element.link}>\r\n              {element.name}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"project__details\">\r\n        <div className=\"project__role\">\r\n          <b>Role:</b> {project.role}\r\n        </div>\r\n        <div className=\"project__description\">{project.description}</div>\r\n        <div className=\"buttons\">\r\n          {project.tech.map(element => (\r\n            <a\r\n              key={element.name}\r\n              className=\"button button--secondary\"\r\n              href={element.link}\r\n            >\r\n              {element.name}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"project__thumbnail\">\r\n        <img\r\n          src={`/images/${project.thumbnail}`}\r\n          alt={`${project.title} thumbnail`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import { ProjectsModel, Role, TechModel } from './Models';\r\n\r\nconst PROJECTS: ProjectsModel = {\r\n  ALLEGIANCE: {\r\n    title: 'Allegiance',\r\n    links: [\r\n      {\r\n        name: 'Live',\r\n        link: 'https://allegiance-demo.netlify.app/',\r\n      },\r\n      {\r\n        name: 'FE GitHub',\r\n        link: 'https://github.com/gasingdong/allegiance-fe',\r\n      },\r\n      {\r\n        name: 'BE GitHub',\r\n        link: 'https://github.com/gasingdong/allegiance-be',\r\n      },\r\n    ],\r\n    role: Role.FULL_STACK,\r\n    description:\r\n      \"A social networking website for sports fans. With a team of 6 developers, I evaluated and refactored a code base inherited from a previous team and completed 3 major milestones for the website's stakeholder: real-time social updates, a notification system, and group management.\",\r\n    tech: [\r\n      TechModel.REACT.value,\r\n      TechModel.REDUX.value,\r\n      TechModel.HTML.value,\r\n      TechModel.CSS.value,\r\n      TechModel.JAVASCRIPT.value,\r\n      TechModel.EXPRESS.value,\r\n    ],\r\n    thumbnail: 'allegiance_thumbnail.jpg',\r\n  },\r\n  TRIPSPLIT: {\r\n    title: 'Trip Splitter',\r\n    links: [\r\n      {\r\n        name: 'Live Docs',\r\n        link: 'https://bd-trip-split.herokuapp.com/api/docs/',\r\n      },\r\n      {\r\n        name: 'GitHub',\r\n        link: 'https://github.com/Build-Week-Trip-Split-FT/Back-End',\r\n      },\r\n    ],\r\n    role: Role.BACK_END,\r\n    description:\r\n      \"A web app for tracking and splitting expenses among multiple travelers. As the back-end developer, I used Node.js/Express.js to build an API server for the project's front-end developers and wrote full documentation of all endpoints using apiDoc.\",\r\n    tech: [\r\n      TechModel.EXPRESS.value,\r\n      TechModel.NODE.value,\r\n      TechModel.TYPESCRIPT.value,\r\n    ],\r\n    thumbnail: 'tripsplit_thumbnail.png',\r\n  },\r\n  BETTERSUBSTATS: {\r\n    title: 'Better Sub Stats',\r\n    links: [\r\n      {\r\n        name: 'Live',\r\n        link: 'https://bettersubstats.netlify.com/',\r\n      },\r\n      {\r\n        name: 'GitHub',\r\n        link: 'https://github.com/sub-stats/front-end',\r\n      },\r\n    ],\r\n    role: Role.FRONT_END,\r\n    description:\r\n      'An SPA that displays subreddit data from Reddit for a specified time period. As the front-end developer, I worked with the data science team to hook their back-end server data visualization to a front-end dashboard using React, Material UI, and Styled Components.',\r\n    tech: [\r\n      TechModel.HTML.value,\r\n      TechModel.CSS.value,\r\n      TechModel.REACT.value,\r\n      TechModel.JAVASCRIPT.value,\r\n    ],\r\n    thumbnail: 'bettersubstats_thumbnail.png',\r\n  },\r\n};\r\n\r\nexport default PROJECTS;\r\n","import React from 'react';\r\nimport Project from './Project';\r\nimport ProjectsList from '../utils/ProjectsList';\r\n\r\nconst Projects: React.FC = () => {\r\n  return (\r\n    <div className=\"projects\" id=\"projects\">\r\n      <h1>Projects</h1>\r\n      {Object.values(ProjectsList).map(element => (\r\n        <Project key={element.title} project={element} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport Intro from './Intro';\r\nimport Skills from './Skills';\r\nimport Projects from './Projects';\r\n\r\nconst Content: React.FC = () => {\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <div role=\"main\" className=\"content\">\r\n        <Intro />\r\n        <Skills />\r\n        <Projects />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nconst NotFound: React.FC = () => {\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <div className=\"content\">\r\n        <h1>Whoops! There&apos;s nothing here...</h1>\r\n        <p>\r\n          Please go back to the <a href=\"/\">home page.</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Content from './components/Content';\r\nimport NotFound from './components/NotFound';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Content />\r\n          </Route>\r\n          <Route>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './stylesheets/main.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}