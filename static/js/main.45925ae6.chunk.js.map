{"version":3,"sources":["assets/avatar.jpg","utils/Models.ts","components/SocialIcon.tsx","components/Header.tsx","components/Intro.tsx","components/Skills.tsx","components/Project.tsx","utils/ProjectsList.ts","components/Projects.tsx","components/Content.tsx","components/NotFound.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Role","SocialIcon","props","url","Icon","download","href","contacts","icon","FaGithub","FaLinkedin","FaTwitter","FaEnvelope","FaFileDownload","Header","className","src","Photo","alt","activeClass","to","spy","smooth","duration","map","contact","key","Intro","id","TechModel","value","VALUES","push","this","REACT","name","link","REDUX","HTML","CSS","EXPRESS","NODE","JAVASCRIPT","TYPESCRIPT","PYTHON","JAVA","Skills","element","Project","project","title","links","role","description","tech","thumbnail","PROJECTS","ALLEGIANCE","FULL_STACK","TRIPSPLIT","BACK_END","BETTERSUBSTATS","FRONT_END","Projects","Object","values","ProjectsList","Content","NotFound","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45925ae6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.80be508a.jpg\";","export interface ProjectsModel {\r\n  [key: string]: ProjectModel;\r\n}\r\n\r\nexport interface ProjectModel {\r\n  title: string;\r\n  links: MetaLinkModel[];\r\n  role: Role;\r\n  description: string;\r\n  tech: MetaLinkModel[];\r\n  thumbnail: string;\r\n}\r\n\r\nexport interface MetaLinkModel {\r\n  name: string;\r\n  link: string;\r\n}\r\n\r\nexport enum Role {\r\n  FULL_STACK = 'Full-Stack Web Developer',\r\n  FRONT_END = 'Front-End Web Developer',\r\n  BACK_END = 'Back-End Web Developer',\r\n  WEB_DESIGN = 'Web Designer',\r\n}\r\n\r\nexport class TechModel {\r\n  static readonly VALUES: TechModel[] = [];\r\n\r\n  static readonly REACT = new TechModel('React', {\r\n    name: 'React.js',\r\n    link: 'https://reactjs.org/',\r\n  });\r\n\r\n  static readonly REDUX = new TechModel('Redux', {\r\n    name: 'Redux',\r\n    link: 'https://redux.js.org/',\r\n  });\r\n\r\n  static readonly HTML = new TechModel('HTML', {\r\n    name: 'HTML',\r\n    link: 'https://en.wikipedia.org/wiki/HTML',\r\n  });\r\n\r\n  static readonly CSS = new TechModel('CSS', {\r\n    name: 'CSS',\r\n    link: 'https://en.wikipedia.org/wiki/Cascading_Style_Sheets',\r\n  });\r\n\r\n  static readonly EXPRESS = new TechModel('Express', {\r\n    name: 'Express.js',\r\n    link: 'https://expressjs.com/',\r\n  });\r\n\r\n  static readonly NODE = new TechModel('Node', {\r\n    name: 'Node.js',\r\n    link: 'https://nodejs.org/en/',\r\n  });\r\n\r\n  static readonly JAVASCRIPT = new TechModel('Javascript', {\r\n    name: 'Javascript',\r\n    link: 'https://www.javascript.com/',\r\n  });\r\n\r\n  static readonly TYPESCRIPT = new TechModel('Typescript', {\r\n    name: 'Typescript',\r\n    link: 'https://www.typescriptlang.org/',\r\n  });\r\n\r\n  static readonly PYTHON = new TechModel('Python', {\r\n    name: 'Python',\r\n    link: 'https://www.python.org/',\r\n  });\r\n\r\n  static readonly JAVA = new TechModel('Java', {\r\n    name: 'Java',\r\n    link: 'https://go.java/',\r\n  });\r\n\r\n  private constructor(\r\n    private readonly key: string,\r\n    public readonly value: MetaLinkModel\r\n  ) {\r\n    TechModel.VALUES.push(this);\r\n  }\r\n\r\n  toString(): string {\r\n    return this.key;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { IconType } from 'react-icons/lib/cjs';\r\n\r\ninterface SocialIconProps {\r\n  url: string;\r\n  Icon: IconType;\r\n  download?: boolean;\r\n}\r\n\r\nconst SocialIcon: React.FC<SocialIconProps> = (props: SocialIconProps) => {\r\n  const { url, Icon, download } = props;\r\n\r\n  return (\r\n    <a href={url} download={download}>\r\n      <Icon />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n","import React from 'react';\r\nimport { Link } from 'react-scroll';\r\nimport {\r\n  FaGithub,\r\n  FaLinkedin,\r\n  FaTwitter,\r\n  FaEnvelope,\r\n  FaFileDownload,\r\n} from 'react-icons/fa';\r\nimport SocialIcon from './SocialIcon';\r\nimport Photo from '../assets/avatar.jpg';\r\n\r\nconst contacts = [\r\n  {\r\n    url: 'https://github.com/gasingdong/',\r\n    icon: FaGithub,\r\n  },\r\n  {\r\n    url: 'https://www.linkedin.com/in/brandon-dong-b8771315a/',\r\n    icon: FaLinkedin,\r\n  },\r\n  {\r\n    url: 'https://twitter.com/gasingdong',\r\n    icon: FaTwitter,\r\n  },\r\n  {\r\n    url: 'mailto:contact@brandondong.com',\r\n    icon: FaEnvelope,\r\n  },\r\n  {\r\n    url: '/files/BrandonDongResume.pdf',\r\n    icon: FaFileDownload,\r\n    download: true,\r\n  },\r\n];\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"avatar\" src={Photo} alt=\"headshot\" />\r\n      <div className=\"name\">BRANDON DONG</div>\r\n      <div className=\"title\">FULL-STACK WEB DEVELOPER</div>\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <Link activeClass=\"active\" to=\"about\" spy smooth duration={500}>\r\n              ABOUT\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link activeClass=\"active\" to=\"skills\" spy smooth duration={500}>\r\n              TECH\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link activeClass=\"active\" to=\"projects\" spy smooth duration={500}>\r\n              PROJECTS\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"socialicons\">\r\n        {contacts.map(contact => (\r\n          <SocialIcon\r\n            key={contact.url}\r\n            url={contact.url}\r\n            Icon={contact.icon}\r\n            download={contact.download}\r\n          />\r\n        ))}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Intro: React.FC = () => {\r\n  return (\r\n    <div id=\"about\">\r\n      <h1>About Me</h1>\r\n      <p>\r\n        I&apos;m Brandon Dong, a full-stack web developer from Riverside, CA. I\r\n        have skills in a variety of front-end and back-end technologies, and I\r\n        primarily work in React.js and Express.js.\r\n      </p>\r\n      <p>\r\n        After receiving my Bachelor&apos;s in Statistics, I spent over five\r\n        years in the retail industry, developing a wide array of skills in\r\n        problem-solving, interpersonal communication, and user-oriented design.\r\n        I&apos;m excited to bring these skills to my next role and to continue\r\n        to build fun and exciting projects.\r\n      </p>\r\n      <p>\r\n        If I&apos;m not programming for work or education, I&apos;m usually\r\n        programming for fun, such as creating Minecraft mods. I also like to\r\n        game, particularly role-playing games or board games.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport { TechModel } from '../utils/Models';\r\n\r\nconst Skills: React.FC = () => {\r\n  return (\r\n    <div className=\"skills\" id=\"skills\">\r\n      <h1>Tech Stack</h1>\r\n      <div className=\"buttons\">\r\n        {TechModel.VALUES.map(element => (\r\n          <a\r\n            key={element.value.name}\r\n            className=\"button button--secondary\"\r\n            href={element.value.link}\r\n          >\r\n            {element.value.name}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { ProjectModel } from '../utils/Models';\r\n\r\ninterface ProjectProps {\r\n  project: ProjectModel;\r\n}\r\n\r\nconst Project: React.FC<ProjectProps> = (props: ProjectProps) => {\r\n  const { project } = props;\r\n  return (\r\n    <div className=\"project\">\r\n      <div className=\"project__header\">\r\n        <h2 className=\"project__title\">{project.title}</h2>\r\n        <div className=\"buttons\">\r\n          {project.links.map(element => (\r\n            <a key={element.name} className=\"button\" href={element.link}>\r\n              {element.name}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"project__details\">\r\n        <div className=\"project__role\">\r\n          <b>Role:</b> {project.role}\r\n        </div>\r\n        <div className=\"project__description\">{project.description}</div>\r\n        <div className=\"buttons\">\r\n          {project.tech.map(element => (\r\n            <a\r\n              key={element.name}\r\n              className=\"button button--secondary\"\r\n              href={element.link}\r\n            >\r\n              {element.name}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"project__thumbnail\">\r\n        <img src={`/images/${project.thumbnail}`} alt=\"project thumbnail\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import { ProjectsModel, Role, TechModel } from './Models';\r\n\r\nconst PROJECTS: ProjectsModel = {\r\n  ALLEGIANCE: {\r\n    title: 'Allegiance',\r\n    links: [\r\n      {\r\n        name: 'Live',\r\n        link: 'https://www.allegiance17.com',\r\n      },\r\n      {\r\n        name: 'FE GitHub',\r\n        link: 'https://github.com/Lambda-School-Labs/allegiance-fe',\r\n      },\r\n      {\r\n        name: 'BE GitHub',\r\n        link: 'https://github.com/Lambda-School-Labs/allegiance-be',\r\n      },\r\n    ],\r\n    role: Role.FULL_STACK,\r\n    description:\r\n      \"A social networking website for sports fans. With a team of 6 developers, I evaluated and refactored a code base inherited from a previous team and completed 3 major milestones for the website's stakeholder: real-time social updates, a notification system, and group management.\",\r\n    tech: [\r\n      TechModel.REACT.value,\r\n      TechModel.REDUX.value,\r\n      TechModel.HTML.value,\r\n      TechModel.CSS.value,\r\n      TechModel.JAVASCRIPT.value,\r\n      TechModel.EXPRESS.value,\r\n    ],\r\n    thumbnail: 'allegiance_thumbnail.jpg',\r\n  },\r\n  TRIPSPLIT: {\r\n    title: 'Trip Splitter',\r\n    links: [\r\n      {\r\n        name: 'Live Docs',\r\n        link: 'https://bd-trip-split.herokuapp.com/api/docs/',\r\n      },\r\n      {\r\n        name: 'GitHub',\r\n        link: 'https://github.com/Build-Week-Trip-Split-FT/Back-End',\r\n      },\r\n    ],\r\n    role: Role.BACK_END,\r\n    description:\r\n      \"A web app for tracking and splitting expenses among multiple travelers. As the back-end developer, I used Node.js/Express.js to build an API server for the project's front-end developers and wrote full documentation of all endpoints using apiDoc.\",\r\n    tech: [\r\n      TechModel.EXPRESS.value,\r\n      TechModel.NODE.value,\r\n      TechModel.TYPESCRIPT.value,\r\n    ],\r\n    thumbnail: 'tripsplit_thumbnail.png',\r\n  },\r\n  BETTERSUBSTATS: {\r\n    title: 'Better Sub Stats',\r\n    links: [\r\n      {\r\n        name: 'Live',\r\n        link: 'https://bettersubstats.netlify.com/',\r\n      },\r\n      {\r\n        name: 'GitHub',\r\n        link: 'https://github.com/sub-stats/front-end',\r\n      },\r\n    ],\r\n    role: Role.FRONT_END,\r\n    description:\r\n      'An SPA that displays subreddit data from Reddit for a specified time period. As the front-end developer, I worked with the data science team to hook their back-end server data visualization to a front-end dashboard using React, Material UI, and Styled Components.',\r\n    tech: [\r\n      TechModel.HTML.value,\r\n      TechModel.CSS.value,\r\n      TechModel.REACT.value,\r\n      TechModel.JAVASCRIPT.value,\r\n    ],\r\n    thumbnail: 'bettersubstats_thumbnail.png',\r\n  },\r\n};\r\n\r\nexport default PROJECTS;\r\n","import React from 'react';\r\nimport Project from './Project';\r\nimport ProjectsList from '../utils/ProjectsList';\r\n\r\nconst Projects: React.FC = () => {\r\n  return (\r\n    <div className=\"projects\" id=\"projects\">\r\n      <h1>Projects</h1>\r\n      {Object.values(ProjectsList).map(element => (\r\n        <Project key={element.title} project={element} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport Intro from './Intro';\r\nimport Skills from './Skills';\r\nimport Projects from './Projects';\r\n\r\nconst Content: React.FC = () => {\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <div className=\"content\">\r\n        <Intro />\r\n        <Skills />\r\n        <Projects />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nconst NotFound: React.FC = () => {\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <div className=\"content\">\r\n        <h1>Whoops! There&apos;s nothing here...</h1>\r\n        <p>\r\n          Please go back to the <a href=\"/\">home page.</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Content from './components/Content';\nimport NotFound from './components/NotFound';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Content />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './stylesheets/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}